# See logs of container
docker container ls
docker logs --tail 100 7914a794e055
docker logs  d66134ee3ce1

docker images


# Log into docker
docker exec -it f486025d419e bash

docker restart f486025d419e

docker service logs -f --since=100s toptal-test_proxy 

docker --help
docker image ls -a
docker container ls -a

docker container run 
--publish or -p port_on_system:port_of_docker 
--detach or -d
--name name_of_docker
image_name

docker container run -it name_of_container bash or sh or name_of_command_to_run
docker container exec -it name_of_container bash or sh or name_of_command_to_run

docker container top name_of_container
docker container stats
docker container inspect name_of_container

docker container ls --filter status=exited --format '{{.Names}}'

$ apt-get update
$ apt-get install iputils-ping

To Copy Data from Docker Container to Host
sudo docker cp container_id:container_path ${PWD}/

MOUNT THE PATH IN CONTAINER RATHER THAN IN IMAGE
sudo docker container run -p 3000:3000 -d --name user_session -v ${PWD}/:/usr/src/app/ testrails 

Mount volume to same name and path if changing or updating databases
docker container run --name  mysql_1 -d -p 3309:3306 -v mysql_db_path:/var/lib/mysql/ -e MYSQL_ROOT_PASSWORD=password mysql:5.7



UPGRADE version in docker for minor updates
just keep the volume same and attach it to new image

DOCKER COMPOSE
docker-compose up    in a folder

Initiating Docker Swarm
docker swarm init

 Service in Docker (replaces docker run in swarm)
docker service create name_of_image

Update docker service with replicas and other things
docker service update service_name --replicas 3




sudo certbot --nginx -d www.sarbat-app.com -d sarbat-app.com -d www.toptal-angular.sarbat-app.com -d toptal-angular.sarbat-app.com -d www.toptal-rails.sarbat-app.com -d toptal-rails.sarbat-app.com -d www.toptal-nodejs.sarbat-app.com -d toptal-nodejs.sarbat-app.com -d www.toptal-python.sarbat-app.com -d toptal-python.sarbat-app.com
